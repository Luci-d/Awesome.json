[
  {
    "name": "Airbnb",
    "url": "https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb",
    "description": "Shareable config for Airbnb's style guide."
  },
  {
    "name": "Canonical",
    "url": "https://github.com/gajus/eslint-config-canonical",
    "description": "Shareable config for Canonical style guide."
  },
  {
    "name": "ESLint",
    "url": "https://github.com/eslint/eslint/tree/master/packages/eslint-config-eslint",
    "description": "Contains the ESLint configuration used for projects maintained by the ESLint team."
  },
  {
    "name": "ES",
    "url": "https://github.com/thenativeweb/eslint-config-es",
    "description": "Shareable config for very strict code."
  },
  {
    "name": "Facebook",
    "url": "https://www.npmjs.com/package/eslint-config-fbjs",
    "description": "Sharable config for Facebook's style guide."
  },
  {
    "name": "Google",
    "url": "https://github.com/google/eslint-config-google",
    "description": "Shareable config for the Google style."
  },
  {
    "name": "Problems",
    "url": "https://github.com/RyanZim/eslint-config-problems",
    "description": "Shareable config that only catches actual problems, and doesn't enforce stylistic preferences."
  },
  {
    "name": "Shopify",
    "url": "https://github.com/Shopify/eslint-plugin-shopify",
    "description": "Shareable config for Shopify's style guide."
  },
  {
    "name": "Standard",
    "url": "https://github.com/feross/eslint-config-standard",
    "description": "Shareable config for JavaScript Standard Style."
  },
  {
    "name": "Supermind",
    "url": "https://github.com/supermind/eslint-config-supermind",
    "description": "Shareable config for Supermind style."
  },
  {
    "name": "XO",
    "url": "https://github.com/sindresorhus/eslint-config-xo",
    "description": "Shareable config for XO."
  },
  {
    "name": "Babel",
    "url": "https://github.com/babel/babel-eslint",
    "description": "Use Babel's parser for linting all Babel features."
  },
  {
    "name": "TypeScript",
    "url": "https://github.com/typescript-eslint/typescript-eslint",
    "description": "A TypeScript parser that produces output compatible with ESLint."
  },
  {
    "name": "BrightScript",
    "url": "https://github.com/RokuRoad/eslint-plugin-roku",
    "description": "BrightScript plugin for Roku development. Includes Parser and Rules."
  },
  {
    "name": "Angular",
    "url": "https://github.com/Gillespie59/eslint-plugin-angular",
    "description": "Linting rules to adhere to the John Papa's Angular Styleguide."
  },
  {
    "name": "Backbone",
    "url": "https://github.com/ilyavolodin/eslint-plugin-backbone",
    "description": "Linting rules for Backbone."
  },
  {
    "name": "Ember",
    "url": "https://github.com/netguru/eslint-plugin-ember",
    "description": "Linting rules for Ember."
  },
  {
    "name": "GraphQL",
    "url": "https://github.com/apollostack/eslint-plugin-graphql",
    "description": "Check your GraphQL query strings against a schema."
  },
  {
    "name": "Hapi",
    "url": "https://github.com/continuationlabs/eslint-plugin-hapi",
    "description": "Linting rules for hapi."
  },
  {
    "name": "JSDoc",
    "url": "https://github.com/gajus/eslint-plugin-jsdoc",
    "description": "Linting rules for JSDoc comments."
  },
  {
    "name": "Lodash",
    "url": "https://github.com/wix/eslint-plugin-lodash",
    "description": "Lodash specific linting rules."
  },
  {
    "name": "Lodash/fp",
    "url": "https://github.com/jfmengels/eslint-plugin-lodash-fp",
    "description": "Lodash/fp specific linting rules."
  },
  {
    "name": "Lodash template",
    "url": "https://github.com/ota-meshi/eslint-plugin-lodash-template",
    "description": "Plugin for Lodash template/Underscore template."
  },
  {
    "name": "Meteor",
    "url": "https://github.com/dferber90/eslint-plugin-meteor",
    "description": "Meteor specific linting rules."
  },
  {
    "name": "Mongodb",
    "url": "https://github.com/nfroidure/eslint-plugin-mongodb",
    "description": "Mongodb native Node.js driver linting rules."
  },
  {
    "name": "Ramda",
    "url": "https://github.com/ramda/eslint-plugin-ramda",
    "description": "Ramda specific linting rules."
  },
  {
    "name": "React",
    "url": "https://github.com/yannickcr/eslint-plugin-react",
    "description": "Linting rules for React and JSX."
  },
  {
    "name": "React Native",
    "url": "https://github.com/Intellicode/eslint-plugin-react-native",
    "description": "React Native specific linting rules."
  },
  {
    "name": "RequireJS",
    "url": "https://github.com/cvisco/eslint-plugin-requirejs",
    "description": "Linting rules for RequireJS."
  },
  {
    "name": "VueJS",
    "url": "https://github.com/vuejs/eslint-plugin-vue",
    "description": "Plugin for VueJS."
  },
  {
    "name": "Babel",
    "url": "https://github.com/babel/eslint-plugin-babel",
    "description": "Adds replacements for built-in rules to include Babel features."
  },
  {
    "name": "Compat",
    "url": "https://github.com/amilajack/eslint-plugin-compat",
    "description": "Lint browser compatability of APIs used (caniuse as an ESLint plugin)."
  },
  {
    "name": "Coffee",
    "url": "https://github.com/aminland/eslint-plugin-coffee",
    "description": "Enables linting CoffeeScript files with, with optional linting rules from the Coffeelint library."
  },
  {
    "name": "CSS-modules",
    "url": "https://github.com/atfzl/eslint-plugin-css-modules",
    "description": "Lint undefined or unused rules for css modules."
  },
  {
    "name": "deprecate",
    "url": "https://github.com/AlexMost/eslint-plugin-deprecate",
    "description": "Mark functions or modules as deprecated and get lint messages when they are used."
  },
  {
    "name": "disable",
    "url": "https://github.com/mradionov/eslint-plugin-disable",
    "description": "Disable specified plugins using file path patterns and inline comments."
  },
  {
    "name": "es5",
    "url": "https://github.com/nkt/eslint-plugin-es5",
    "description": "ESLint plugin for ES5 users (forbid ES2015+ usage)."
  },
  {
    "name": "Flow",
    "url": "https://github.com/gajus/eslint-plugin-flowtype",
    "description": "Flow type linting rules."
  },
  {
    "name": "Flow Errors",
    "url": "https://github.com/amilajack/eslint-plugin-flowtype-errors",
    "description": "Run Flow as an ESLint plugin."
  },
  {
    "name": "HTML",
    "url": "https://github.com/BenoitZugmeyer/eslint-plugin-html",
    "description": "Linting for JavaScript inside of HTML <script> tags."
  },
  {
    "name": "import",
    "url": "https://github.com/benmosher/eslint-plugin-import",
    "description": "Linting of ES2015+  import/export syntax, and prevent issues with misspelling of file paths and import names."
  },
  {
    "name": "JSON",
    "url": "https://github.com/azeemba/eslint-plugin-json",
    "description": "Lint your JSON files."
  },
  {
    "name": "Markdown",
    "url": "https://github.com/eslint/eslint-plugin-markdown",
    "description": "Linting JavaScript in Markdown."
  },
  {
    "name": "Node",
    "url": "https://github.com/mysticatea/eslint-plugin-node",
    "description": "Linting rules for Node.js (checking importing paths, ES syntax, ...)."
  },
  {
    "name": "Notice",
    "url": "https://github.com/nickdeis/eslint-plugin-notice",
    "description": "An eslint rule that checks the top of files and fixes them too!"
  },
  {
    "name": "Optimize Regex",
    "url": "https://github.com/BrainMaestro/eslint-plugin-optimize-regex",
    "description": "Optimize regex literals."
  },
  {
    "name": "SonarJS",
    "url": "https://github.com/SonarSource/eslint-plugin-sonarjs",
    "description": "Rules detecting bugs and suspicious patterns."
  },
  {
    "name": "SQL",
    "url": "https://github.com/gajus/eslint-plugin-sql",
    "description": "SQL linting rules for ESLint."
  },
  {
    "name": "TypeLint",
    "url": "https://github.com/yarax/typelint",
    "description": "Introduces types, based on existing schemas (Swagger, Redux) and linting access to object properties, preventing undefined errors."
  },
  {
    "name": "unicorn",
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn",
    "description": "Various awesome ESLint rules."
  },
  {
    "name": "ESLint Comments",
    "url": "https://github.com/mysticatea/eslint-plugin-eslint-comments",
    "description": "Best practices about ESLint directive comments (/*eslint-disable*/, etc...)."
  },
  {
    "name": "eslint-plugin-eslint-plugin",
    "url": "https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin",
    "description": "An ESLint plugin for linting ESLint plugins."
  },
  {
    "name": "array-func",
    "url": "https://github.com/freaktechnik/eslint-plugin-array-func",
    "description": "Avoid redundancy when using es2015 array methods and functions."
  },
  {
    "name": "arrow functions",
    "url": "https://github.com/getify/eslint-plugin-proper-arrows",
    "description": "ESLint rules to ensure proper arrow function definitions."
  },
  {
    "name": "fp",
    "url": "https://github.com/jfmengels/eslint-plugin-fp",
    "description": "ESLint rules for functional programming."
  },
  {
    "name": "Immutable",
    "url": "https://github.com/jhusain/eslint-plugin-immutable",
    "description": "Disable all mutation in JavaScript."
  },
  {
    "name": "JSX a11y",
    "url": "https://github.com/evcohen/eslint-plugin-jsx-a11y",
    "description": "Accessibility rules on JSX elements."
  },
  {
    "name": "new-with-error",
    "url": "https://github.com/Trott/eslint-plugin-new-with-error",
    "description": "Require errors to be thrown using new."
  },
  {
    "name": "no-inferred-method-name",
    "url": "https://github.com/johnstonbl01/eslint-no-inferred-method-name",
    "description": "Custom rule for ESLint that checks for inferred method names within object literals.."
  },
  {
    "name": "no-loops",
    "url": "https://github.com/buildo/eslint-plugin-no-loops",
    "description": "It's 2019 and you still use loops?"
  },
  {
    "name": "no-use-extend-native",
    "url": "https://github.com/dustinspecker/eslint-plugin-no-use-extend-native",
    "description": "Prevent using extended native objects."
  },
  {
    "name": "Promise",
    "url": "https://github.com/xjamundx/eslint-plugin-promise",
    "description": "Best practices when working with promises."
  },
  {
    "name": "Security",
    "url": "https://github.com/nodesecurity/eslint-plugin-security",
    "description": "ESLint rules for Node Security."
  },
  {
    "name": "this",
    "url": "https://github.com/matijs/eslint-plugin-this",
    "description": "Write pure functions, don't allow this."
  },
  {
    "name": "XSS",
    "url": "https://github.com/Rantanen/eslint-plugin-xss",
    "description": "Tries to detect XSS issues in codebase before they end up in production."
  },
  {
    "name": "no-secrets",
    "url": "https://github.com/nickdeis/eslint-plugin-no-secrets",
    "description": "An eslint plugin that detects potential secrets/credentials."
  },
  {
    "name": "filenames",
    "url": "https://github.com/selaux/eslint-plugin-filenames",
    "description": "Ensure consistent filenames for your JavaScript files."
  },
  {
    "name": "Simple import sort",
    "url": "https://github.com/lydell/eslint-plugin-simple-import-sort",
    "description": "Easy autofixable import sorting."
  },
  {
    "name": "Switch case",
    "url": "https://github.com/lukeapage/eslint-plugin-switch-case",
    "description": "Switch-case-specific linting rules for ESLint."
  },
  {
    "name": "AVA",
    "url": "https://github.com/sindresorhus/eslint-plugin-ava",
    "description": "Linting rules for AVA."
  },
  {
    "name": "Chai",
    "url": "https://github.com/turbo87/eslint-plugin-chai-expect",
    "description": "Linting rules for Chai."
  },
  {
    "name": "Jasmine",
    "url": "https://github.com/tlvince/eslint-plugin-jasmine",
    "description": "Linting rules for Jasmine."
  },
  {
    "name": "Jest",
    "url": "https://github.com/jest-community/eslint-plugin-jest",
    "description": "Linting rules for Jest."
  },
  {
    "name": "Mocha",
    "url": "https://github.com/lo1tuma/eslint-plugin-mocha",
    "description": "Linting rules for Mocha."
  },
  {
    "name": "Cypress",
    "url": "https://github.com/cypress-io/eslint-plugin-cypress",
    "description": "Linting rules for Cypress."
  },
  {
    "name": "Node.js Standard Style",
    "url": "https://github.com/geek/node-style",
    "description": "Node.js core config."
  },
  {
    "name": "prettier-standard",
    "url": "https://github.com/sheerun/prettier-standard",
    "description": "Prettier formatter with custom eslint rules allowed."
  },
  {
    "name": "Standard",
    "url": "https://github.com/feross/standard",
    "description": "JavaScript Standard Style."
  },
  {
    "name": "Superlint",
    "url": "https://github.com/supermind/superlint",
    "description": "JavaScript Supermind Style."
  },
  {
    "name": "XO",
    "url": "https://github.com/sindresorhus/xo",
    "description": "JavaScript happiness style linter ❤️."
  },
  {
    "name": "Zoe",
    "url": "https://github.com/jorgegonzalez/zoe",
    "description": "Universal JavaScript linter and formatter."
  },
  {
    "name": "Healthier",
    "url": "https://github.com/KidkArolis/healthier",
    "description": "Code style agnostic version of Standard, perfect companion to Prettier."
  },
  {
    "name": "eslint-cli",
    "url": "https://github.com/eslint/eslint-cli",
    "description": "This is the eslint command that executes a local installed ESLint."
  },
  {
    "name": "eslint-find-rules",
    "url": "https://github.com/sarbbottam/eslint-find-rules",
    "description": "Find built-in ESLint rules you don't have in your custom config."
  },
  {
    "name": "eslint-index",
    "url": "https://github.com/wagerfield/eslint-index",
    "description": "CLI for finding and managing rules in ESLint config files."
  },
  {
    "name": "eslint-multiplexer",
    "url": "https://github.com/pimlie/eslint-multiplexer",
    "description": "Multiplex eslint results and merge results for common files."
  },
  {
    "name": "eslint-nibble",
    "url": "https://github.com/IanVS/eslint-nibble",
    "description": "Ease into ESLint, by fixing one rule at a time."
  },
  {
    "name": "eslint-rule-documentation",
    "url": "https://github.com/jfmengels/eslint-rule-documentation",
    "description": "Find the url for the documentation of an ESLint rule."
  },
  {
    "name": "eslint-watch",
    "url": "https://github.com/rizowski/eslint-watch",
    "description": "Run ESLint with watch mode."
  },
  {
    "name": "codacy-eslint",
    "url": "https://github.com/codacy/codacy-eslint",
    "description": "Docker used at Codacy to run ESLint."
  },
  {
    "name": "esprint",
    "url": "https://github.com/pinterest/esprint",
    "description": "Run ESLint across multiple threads."
  },
  {
    "name": "eslint-formatter-gitlab",
    "url": "https://gitlab.com/remcohaszing/eslint-formatter-gitlab",
    "description": "Output ESLint results in the GitLab code quality results."
  },
  {
    "name": "eslint-docs",
    "url": "https://github.com/j-f1/eslint-docs",
    "description": "Keep your rule descriptions up-to-date across the repository."
  },
  {
    "name": "Creating an ESLint Plugin",
    "url": "https://medium.com/tumblbug-engineering/creating-an-eslint-plugin-87f1cb42767f",
    "description": "Article walking through the creation of an ESLint rule and plugin."
  },
  {
    "name": "Lint Like It’s 2015",
    "url": "https://medium.com/@dan_abramov/lint-like-it-s-2015-6987d44c5b48#.5p3yk0b03",
    "description": "Article walking through the benefits of using ESLint."
  },
  {
    "name": "Linting JavaScript with ESLint",
    "url": "https://egghead.io/lessons/javascript-linting-javascript-with-eslint",
    "description": "Video showing ESLint setup and basics."
  },
  {
    "name": "Linting React JSX with ESLint (in ES6)",
    "url": "https://egghead.io/lessons/react-linting-react-jsx-with-eslint-in-es6",
    "description": "Video showing how to use React and JSX with ESLint."
  },
  {
    "name": "Plugin Module with Mixins",
    "url": "https://chrysanthium.com/eslint-integration",
    "description": "Article on how to write a plugin as a node module containing modular mixin configuration."
  },
  {
    "name": "Writing a rule to spot undeclared props hiding in plain sight",
    "url": "http://blog.cowchimp.com/writing-a-custom-eslint-rule-to-spot-undeclared-props/",
    "description": "Article about creating rules that require scope analysis."
  }
]
