[
  {
    "name": "Python version compatibility:   ",
    "url": "https://camo.githubusercontent.com/3384921ef8521a4ad79f2660df284a743494346f/687474703a2f2f70726f677265737365642e696f2f6261722f39393f7469746c653d707974686f6e25323032"
  },
  {
    "name": "audiolazy  ðŸ“¦",
    "url": "https://github.com/danilobellini/audiolazy",
    "description": "Expressive Digital Signal Processing (DSP) package for Python."
  },
  {
    "name": "audioread  ðŸ“¦",
    "url": "https://github.com/beetbox/audioread",
    "description": "Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding."
  },
  {
    "name": "mutagen  ðŸ“¦",
    "url": "https://mutagen.readthedocs.io/",
    "description": "Reads and writes all kind of audio metadata for various formats."
  },
  {
    "name": "pyAV ",
    "url": "https://mikeboers.github.io/PyAV/",
    "description": "PyAV is a Pythonic binding for FFmpeg or Libav."
  },
  {
    "name": "(Py)Soundfile  ðŸ“¦",
    "url": "http://pysoundfile.readthedocs.io/",
    "description": "Library based on libsndfile, CFFI, and NumPy."
  },
  {
    "name": "pySox  ðŸ“¦",
    "url": "https://github.com/rabitt/pysox",
    "description": "Wrapper for sox."
  },
  {
    "name": "PySynth ",
    "url": "http://mdoege.github.io/PySynth",
    "description": "simple midi-to-wav synthesizer."
  },
  {
    "name": "stempeg  ðŸ“¦",
    "url": "https://github.com/faroit/stempeg",
    "description": "read/write of STEMS multistream audio."
  },
  {
    "name": "tinytag  ðŸ“¦",
    "url": "https://github.com/devsnd/tinytag",
    "description": "reading music meta data of MP3, OGG, FLAC and Wave files."
  },
  {
    "name": "audiomateÂ³  ðŸ“¦",
    "url": "https://github.com/ynop/audiomate",
    "description": "Loading different types of audio datasets."
  },
  {
    "name": "acoustics  ðŸ“¦",
    "url": "http://python-acoustics.github.io/python-acoustics/",
    "description": "useful tools for acousticians."
  },
  {
    "name": "AudioTK ",
    "url": "https://github.com/mbrucher/AudioTK",
    "description": "DSP filter toolbox (lots of filters)."
  },
  {
    "name": "AudioTSM  ðŸ“¦",
    "url": "https://audiotsm.readthedocs.io/",
    "description": "real-time audio time-scale modification procedures."
  },
  {
    "name": "Gammatone ",
    "url": "https://github.com/detly/gammatone",
    "description": "Gammatone filterbank implementation."
  },
  {
    "name": "pyFFTW  ðŸ“¦",
    "url": "http://pyfftw.github.io/pyFFTW/",
    "description": "Wrapper for FFTW(3)."
  },
  {
    "name": "NSGT  ðŸ“¦",
    "url": "https://grrrr.org/research/software/nsgt/",
    "description": "Non-stationary gabor transform, constant-q."
  },
  {
    "name": "MDCT  ðŸ“¦",
    "url": "https://github.com/nils-werner/mdct",
    "description": "MDCT transform."
  },
  {
    "name": "pydub  ðŸ“¦",
    "url": "http://pydub.com",
    "description": "Manipulate audio with a simple and easy high level interface."
  },
  {
    "name": "pytftb ",
    "url": "http://tftb.nongnu.org",
    "description": "Implementation of the MATLAB Time-Frequency Toolbox."
  },
  {
    "name": "pyroomacoustics  ðŸ“¦",
    "url": "https://github.com/LCAV/pyroomacoustics",
    "description": "Room Acoustics Simulation (RIR generator)"
  },
  {
    "name": "PyRubberband  ðŸ“¦",
    "url": "https://github.com/bmcfee/pyrubberband",
    "description": "Wrapper for rubberband to do pitch-shifting and time-stretching."
  },
  {
    "name": "PyWavelets  ðŸ“¦",
    "url": "http://pywavelets.readthedocs.io",
    "description": "Discrete Wavelet Transform in Python."
  },
  {
    "name": "Resampy  ðŸ“¦",
    "url": "http://resampy.readthedocs.io",
    "description": "Sample rate conversion."
  },
  {
    "name": "SFS-Python  ðŸ“¦",
    "url": "http://sfstoolbox.org/",
    "description": "Sound Field Synthesis Toolbox."
  },
  {
    "name": "STFT  ðŸ“¦",
    "url": "http://stft.readthedocs.io",
    "description": "Standalone package for Short-Time Fourier Transform."
  },
  {
    "name": "aubio  ðŸ“¦",
    "url": "http://aubio.org/",
    "description": "Feature extractor, written in C, Python interface."
  },
  {
    "name": "audiolazy  ðŸ“¦",
    "url": "https://github.com/danilobellini/audiolazy",
    "description": "Realtime Audio Processing lib, general purpose."
  },
  {
    "name": "essentia ",
    "url": "http://essentia.upf.edu",
    "description": "Music related low level and high level feature extractor, C++ based, includes Python bindings."
  },
  {
    "name": "muda  ðŸ“¦",
    "url": "https://muda.readthedocs.io/en/latest/",
    "description": " Musical Data Augmentation."
  },
  {
    "name": "python_speech_features  ðŸ“¦",
    "url": "https://github.com/jameslyons/python_speech_features",
    "description": "Common speech features for ASR."
  },
  {
    "name": "pyYAAFE ",
    "url": "https://github.com/Yaafe/Yaafe",
    "description": "Python bindings for YAAFE feature extractor."
  },
  {
    "name": "speechpy  ðŸ“¦",
    "url": "https://github.com/astorfi/speechpy",
    "description": "Library for Speech Processing and Recognition, mostly feature extraction for now."
  },
  {
    "name": "aeneas  ðŸ“¦",
    "url": "https://www.readbeyond.it/aeneas/",
    "description": "Forced aligner, based on MFCC+DTW, 35+ languages."
  },
  {
    "name": "pyAudioAnalysisÂ²  ðŸ“¦",
    "url": "https://github.com/tyiannak/pyAudioAnalysis",
    "description": "Feature Extraction, Classification, Diarization."
  },
  {
    "name": "py-webrtcvad  ðŸ“¦",
    "url": "https://github.com/wiseman/py-webrtcvad",
    "description": " Interface to the WebRTC Voice Activity Detector."
  },
  {
    "name": "PyWorldVocoder ",
    "url": "https://github.com/JeremyCCHsu/Python-Wrapper-for-World-Vocoder",
    "description": "Wrapper for Morise's World Vocoder."
  },
  {
    "name": "Montreal Forced Aligner ",
    "url": "https://montrealcorpustools.github.io/Montreal-Forced-Aligner/",
    "description": "Forced aligner, based on Kaldi (HMM), English (others can be trained)."
  },
  {
    "name": "SIDEKITÂ³ ðŸ“¦",
    "url": "http://lium.univ-lemans.fr/sidekit/",
    "description": "Speaker and Language recognition."
  },
  {
    "name": "SpeechRecognition  ðŸ“¦",
    "url": "https://github.com/Uberi/speech_recognition",
    "description": " Wrapper for several ASR engines and APIs, online and offline."
  },
  {
    "name": "cochleaÂ²  ðŸ“¦",
    "url": "https://github.com/mrkrd/cochlea",
    "description": "Inner ear models."
  },
  {
    "name": "Brian2  ðŸ“¦",
    "url": "http://briansimulator.org/",
    "description": "Spiking neural networks simulator, includes cochlea model."
  },
  {
    "name": "LoudnessÂ² ",
    "url": "https://github.com/deeuu/loudness",
    "description": "Perceived loudness, includes Zwicker, Moore/Glasberg model."
  },
  {
    "name": "Sound Field Synthesis Toolbox  ðŸ“¦",
    "url": "http://sfstoolbox.org/",
    "description": "Sound Field Synthesis Toolbox."
  },
  {
    "name": "beta_ntfÂ² ",
    "url": "https://code.google.com/archive/p/beta-ntf/",
    "description": "Non-Negative Tensor factorisation using PARAFAC."
  },
  {
    "name": "commonfate  ðŸ“¦",
    "url": "https://github.com/aliutkus/commonfate",
    "description": "Common Fate Model and Transform."
  },
  {
    "name": "NUSSLÂ²  ðŸ“¦",
    "url": "https://interactiveaudiolab.github.io/nussl/",
    "description": "Various source separation algorithms + framework."
  },
  {
    "name": "NTFLib ",
    "url": "https://github.com/stitchfix/NTFLib",
    "description": "Sparse Beta-Divergence Tensor Factorization."
  },
  {
    "name": "NIMFA  ðŸ“¦",
    "url": "http://nimfa.biolab.si",
    "description": "Several NMF flavors."
  },
  {
    "name": "pyFASSTÂ²  ðŸ“¦",
    "url": "https://github.com/wslihgt/pyfasst",
    "description": "Wrapper for Flexible Audio Source Separation Toolbox."
  },
  {
    "name": "Catchy ",
    "url": "https://github.com/jvbalen/catchy",
    "description": "Corpus Analysis Tools for Computational Hook Discovery."
  },
  {
    "name": "dejavuÂ²  ðŸ“¦",
    "url": "http://willdrevo.com/fingerprinting-and-audio-recognition-with-python/",
    "description": "Audio fingerprinting and recognition."
  },
  {
    "name": "Madmom  ðŸ“¦",
    "url": "https://madmom.readthedocs.io/en/latest/",
    "description": "MIR packages with strong focus on beat detection, onset detection and chord recognition."
  },
  {
    "name": "mir_eval  ðŸ“¦",
    "url": "http://craffel.github.io/mir_eval/",
    "description": "Common scores for various MIR tasks. Also includes bss_eval implementation."
  },
  {
    "name": "msaf  ðŸ“¦",
    "url": "http://pythonhosted.org/msaf/",
    "description": "Music Structure Analysis Framework."
  },
  {
    "name": "librosa  ðŸ“¦",
    "url": "http://librosa.github.io/librosa/",
    "description": "General audio and music analysis."
  },
  {
    "name": "rp_extractÂ² ",
    "url": "https://github.com/tuwien-musicir/rp_extract",
    "description": "Rhythm Pattern music feature extractor."
  },
  {
    "name": "Kapre  ðŸ“¦",
    "url": "https://github.com/keunwoochoi/kapre",
    "description": "Keras Audio Preprocessors"
  },
  {
    "name": "TorchAudio ",
    "url": "https://github.com/pytorch/audio",
    "description": "PyTorch Audio Loaders"
  },
  {
    "name": "Music21  ðŸ“¦",
    "url": "http://web.mit.edu/music21/",
    "description": "Toolkit for Computer-Aided Musicology."
  },
  {
    "name": "Mido  ðŸ“¦",
    "url": "https://mido.readthedocs.io/en/latest/",
    "description": "Realtime MIDI wrapper."
  },
  {
    "name": "mingusÂ²  ðŸ“¦",
    "url": "http://bspaans.github.io/python-mingus/",
    "description": "Advanced music theory and notation package with MIDI file and playback support."
  },
  {
    "name": "Pretty-MIDI  ðŸ“¦",
    "url": "http://craffel.github.io/pretty-midi/",
    "description": "Utility functions for handling MIDI data in a nice/intuitive way."
  },
  {
    "name": "PYO ",
    "url": "http://ajaxsoundstudio.com/software/pyo/",
    "description": "Realtime audio dsp engine."
  },
  {
    "name": "python-sounddevice  ðŸ“¦",
    "url": "https://github.com/spatialaudio/python-sounddevice",
    "description": "PortAudio wrapper providing realtime audio I/O with NumPy."
  },
  {
    "name": "TimeSideÂ² ",
    "url": "https://github.com/Parisson/TimeSide",
    "description": "high level audio analysis, imaging, transcoding, streaming and labelling."
  },
  {
    "name": "beets  ðŸ“¦",
    "url": "http://beets.io/",
    "description": "Music library manager and MusicBrainz tagger."
  },
  {
    "name": "dsdtools  ðŸ“¦",
    "url": "http://dsdtools.readthedocs.io",
    "description": "Parse and process the demixing secrets dataset."
  },
  {
    "name": "medleydb ",
    "url": "http://medleydb.readthedocs.io",
    "description": "Parse medleydb audio + annotations."
  },
  {
    "name": "Soundcloud API  ðŸ“¦",
    "url": "https://github.com/soundcloud/soundcloud-python",
    "description": "Wrapper for Soundcloud API."
  },
  {
    "name": "Youtube-Downloader  ðŸ“¦",
    "url": "http://rg3.github.io/youtube-dl/",
    "description": "Download youtube videos (and the audio)."
  },
  {
    "name": "VamPy Host ðŸ“¦",
    "url": "https://code.soundsoftware.ac.uk/projects/vampy-host",
    "description": "Interface compiled vamp plugins."
  },
  {
    "name": "Whirlwind Tour Of Python ",
    "url": "https://jakevdp.github.io/WhirlwindTourOfPython/",
    "description": "fast-paced introduction to Python essentials, aimed at researchers and developers."
  },
  {
    "name": "Introduction to Numpy and Scipy ",
    "url": "http://www.scipy-lectures.org/index.html",
    "description": "Highly recommended tutorial, covers large parts of the scientific Python ecosystem."
  },
  {
    "name": "Numpy for MATLABÂ® Users",
    "url": "https://docs.scipy.org/doc/numpy/user/numpy-for-matlab-users.html",
    "description": "Short overview of equivalent python functions for switchers."
  },
  {
    "name": "MIR Notebooks ",
    "url": "http://musicinformationretrieval.com/",
    "description": "collection of instructional iPython Notebooks for music information retrieval (MIR)."
  },
  {
    "name": "Selected Topics in Audio Signal Processing",
    "url": "https://github.com/spatialaudio/selected-topics-in-audio-signal-processing-exercises",
    "description": "Exercises as iPython notebooks."
  },
  {
    "name": "Python Data Science Handbook",
    "url": "https://github.com/jakevdp/PythonDataScienceHandbook",
    "description": "Jake Vanderplas, Excellent Book and accompanying tutorial notebooks."
  },
  {
    "name": "Fundamentals of Music Processing",
    "url": "https://www.audiolabs-erlangen.de/fau/professor/mueller/bookFMP",
    "description": "Meinard MÃ¼ller, comes with Python exercises."
  },
  {
    "name": "Python for audio signal processing",
    "url": "http://eprints.maynoothuniversity.ie/4115/1/40.pdf",
    "description": "John C. Glover, Victor Lazzarini and Joseph Timoney, Linux Audio Conference 2011."
  },
  {
    "name": "librosa: Audio and Music Signal Analysis in Python, Video",
    "url": "http://conference.scipy.org/proceedings/scipy2015/pdfs/brian_mcfee.pdf",
    "description": "Brian McFee, Colin Raffel, Dawen Liang, Daniel P.W. Ellis, Matt McVicar, Eric Battenberg, Oriol Nieto, Scipy 2015."
  },
  {
    "name": "Coursera Course",
    "url": "https://www.coursera.org/learn/audio-signal-processing",
    "description": " Audio Signal Processing, Python based course from UPF of Barcelona and Stanford University."
  },
  {
    "name": "Digital Signal Processing Course",
    "url": "http://dsp-nbsphinx.readthedocs.io/en/nbsphinx-experiment/index.html",
    "description": "Masters Course Material (University of Rostock) with many Python examples."
  },
  {
    "name": "Slack Channel",
    "url": "https://mircommunity.slack.com",
    "description": "Music Information Retrieval Community."
  }
]
