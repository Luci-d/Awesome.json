[
  {
    "name": "Introduction to Terraform",
    "url": "https://www.terraform.io/intro/"
  },
  {
    "name": "Terraform Documentation",
    "url": "https://www.terraform.io/docs/"
  },
  {
    "name": "Terraform Google Group",
    "url": "https://groups.google.com/forum/#!forum/terraform-tool"
  },
  {
    "name": "Terraform Gitter",
    "url": "https://gitter.im/hashicorp-terraform"
  },
  {
    "name": "Terraform Bug Tracker",
    "url": "https://github.com/hashicorp/terraform/issues"
  },
  {
    "name": "Terraform Community Modules",
    "url": "https://github.com/terraform-community-modules"
  },
  {
    "name": "Terraform Module Registry",
    "url": "https://registry.terraform.io/"
  },
  {
    "name": "Terraform PDF Doc",
    "url": "https://github.com/dohsimpson/terraform-doc-pdf"
  },
  {
    "name": "Terraform: Up & Running",
    "url": "http://www.terraformupandrunning.com/?ref=gruntwork-blog-comprehensive-terraform"
  },
  {
    "name": "The Terraform Book",
    "url": "https://terraformbook.com/"
  },
  {
    "name": "Getting Started with Terraform",
    "url": "https://www.amazon.com/Getting-Started-Terraform-Kirill-Shirinkin/dp/1786465108/"
  },
  {
    "name": "Infrastructure as Code",
    "url": "http://shop.oreilly.com/product/0636920039297.do"
  },
  {
    "name": "Terraforming 1Password",
    "url": "https://blog.agilebits.com/2018/01/25/terraforming-1password/",
    "description": "How 1Password migrated from CloudFormation to Terraform."
  },
  {
    "name": "The Segment AWS Stack",
    "url": "https://segment.com/blog/the-segment-aws-stack/",
    "description": "Shows the behind the scenes of the infrastructure powered by Terraform that solved The Million Dollar Engineering Problem at Segment."
  },
  {
    "name": "A Comprehensive Guide to Terraform",
    "url": "https://blog.gruntwork.io/a-comprehensive-guide-to-terraform-b3d32832baca#.w9x897ywp",
    "description": "Series of blog posts from the author of \"Terraform: Up & Running\" that guide the reader from beginning with Terraform to using it in the real world."
  },
  {
    "name": "Easily Deploy A Seneca Microservice to ECS with Wercker and Terraform: Part I, II & III",
    "url": "http://chiefy.github.io/easily-deploy-a-seneca-microservice-to-ecs-with-wercker-and-terraform-part-i/",
    "description": "Illustrates how Terraform can be incorporated into a microservice deployment pipeline."
  },
  {
    "name": "Tutorial: How to Use Terraform to Deploy OpenStack Workloads",
    "url": "http://www.stratoscale.com/blog/openstack/tutorial-how-to-use-terraform-to-deploy-openstack-workloads/",
    "description": "Illustrates how easy it is to use the OpenStack Terraform provider to deploy a web server."
  },
  {
    "name": "Terraform: Beyond the Basics with AWS",
    "url": "https://aws.amazon.com/blogs/apn/terraform-beyond-the-basics-with-aws/",
    "description": "Explanation of a demo using Terraform to provision a sample AWS architecture."
  },
  {
    "name": "Deploying Discourse with Terraform",
    "url": "https://www.hashicorp.com/blog/terraform-discourse.html",
    "description": "Shows how Terraform can create a running instance of Discourse on DigitalOcean in one command."
  },
  {
    "name": "Bootstrapping Docker Infrastructure With Terraform",
    "url": "http://vilkeliskis.com/blog/2016/02/10/bootstrapping-docker-with-terraform.html",
    "description": "Walkthrough of deploying a dockerized app on ECS using Terraform."
  },
  {
    "name": "Two Weeks with Terraform",
    "url": "https://charity.wtf/2016/02/23/two-weeks-with-terraform/",
    "description": "Some hard-earned experience from using Terraform in the wild, and some operational wisdom."
  },
  {
    "name": "Using Terraform for Cloud Deployments",
    "url": "https://dev.to/koenighotze/using-terraform-for-cloud-deployments---part-1",
    "description": "Part 1 - Beginner tutorial with a focus on using Terraform to provision an EC2 instance."
  },
  {
    "name": "Terraform, VPC, and why you want a tfstate file per env",
    "url": "https://charity.wtf/2016/03/30/terraform-vpc-and-why-you-want-a-tfstate-file-per-env/",
    "description": "Some gotchas surrounding using Terraform in large projects with multiple environments and how to avoid them."
  },
  {
    "name": "Sharing data between Terraform configurations",
    "url": "https://jamesmckay.net/2016/09/sharing-data-between-terraform-configurations/",
    "description": "Illustrates how to use remote state to share data between Terraform configurations."
  },
  {
    "name": "Using Pipelines to Manage Environments with Infrastructure as Code",
    "url": "https://medium.com/@kief/https-medium-com-kief-using-pipelines-to-manage-environments-with-infrastructure-as-code-b37285a1cbf5",
    "description": "Explains different approaches for building a pipeline to handle infrastructure changes moving from one environment to the next."
  },
  {
    "name": "segmentio/stack",
    "url": "https://github.com/segmentio/stack",
    "description": "Configures production infrastructure with AWS, Docker, and ECS."
  },
  {
    "name": "terraform-ecs-jenkins",
    "url": "https://github.com/shuaibiyy/terraform-ecs-jenkins",
    "description": "Provisions Jenkins on AWS ECS using Terraform."
  },
  {
    "name": "tf_aws_bastion_s3_keys",
    "url": "https://github.com/terraform-community-modules/tf_aws_bastion_s3_keys",
    "description": "Creates bastion hosts on AWS EC2."
  },
  {
    "name": "terraform-static-website-s3-cloudfront",
    "url": "https://github.com/sjevs/terraform-static-website-s3-cloudfront",
    "description": "Creates static websites on AWS S3 & Cloudfront based on variables."
  },
  {
    "name": "tf_aws_vpc_only",
    "url": "https://github.com/terraform-community-modules/tf_aws_vpc_only",
    "description": "Provides only VPC (without subnets) in AWS."
  },
  {
    "name": "tf_aws_asg_elb",
    "url": "https://github.com/terraform-community-modules/tf_aws_asg_elb",
    "description": "Creates Auto-Scaling Groups and Launch Configurations for use with an Elastic Load Balancer."
  },
  {
    "name": "tf_aws_availability_zones_cfn",
    "url": "https://github.com/terraform-community-modules/tf_aws_availability_zones_cfn",
    "description": "Gets availability zones for your AWS region/account from Cloudformation."
  },
  {
    "name": "tf_aws_ubuntu_ami",
    "url": "https://github.com/terraform-community-modules/tf_aws_ubuntu_ami",
    "description": "Easy way to lookup Ubuntu AMIs with Terraform."
  },
  {
    "name": "tf_aws_sg",
    "url": "https://github.com/terraform-community-modules/tf_aws_sg",
    "description": "Collection of common security group settings."
  },
  {
    "name": "tf_aws_coreos_ami",
    "url": "https://github.com/terraform-community-modules/tf_aws_coreos_ami",
    "description": "Easy way to lookup CoreOS AMIs with terraform."
  },
  {
    "name": "tf_aws_private_subnet_nat_gateway",
    "url": "https://github.com/terraform-community-modules/tf_aws_private_subnet_nat_gateway",
    "description": "Creates private subnets with NAT Gateway in AWS."
  },
  {
    "name": "tf_aws_rds",
    "url": "https://github.com/terraform-aws-modules/terraform-aws-rds",
    "description": "Creates RDS resources on AWS."
  },
  {
    "name": "terraform-aws-postgresql-rds",
    "url": "https://github.com/azavea/terraform-aws-postgresql-rds",
    "description": "Creates PostgreSQL on RDS."
  },
  {
    "name": "tf_aws_vpc",
    "url": "https://github.com/terraform-community-modules/tf_aws_vpc",
    "description": "Provides VPCs in AWS."
  },
  {
    "name": "tf_aws_nat",
    "url": "https://github.com/terraform-community-modules/tf_aws_nat",
    "description": "NAT instances for AWS."
  },
  {
    "name": "rancher-terraform-digitalocean",
    "url": "https://github.com/lunagt/rancher-terraform-digitalocean",
    "description": "Rancher server on digitalocean."
  },
  {
    "name": "terraform-aws-ecr",
    "url": "https://github.com/cloudposse/terraform-aws-ecr",
    "description": "Manages Docker container registries on AWS ECR."
  },
  {
    "name": "terraform-aws-efs",
    "url": "https://github.com/cloudposse/terraform-aws-efs",
    "description": "Defines an EFS Filesystem."
  },
  {
    "name": "terraform-aws-key-pair",
    "url": "https://github.com/cloudposse/terraform-aws-key-pair",
    "description": "Automatically Generate SSH Key Pairs (Public/Private Keys)."
  },
  {
    "name": "terraform-aws-jenkins",
    "url": "https://github.com/cloudposse/terraform-aws-jenkins",
    "description": "Build a Docker image with Jenkins, saves it to an ECR repo, and deploys it to Elastic Beanstalk running a Docker stack."
  },
  {
    "name": "Atlantis",
    "url": "https://github.com/hootsuite/atlantis",
    "description": "Unified workflow for collaborating on Terraform through GitHub."
  },
  {
    "name": "terraform_validate",
    "url": "https://github.com/elmundio87/terraform_validate",
    "description": "Assists in the enforcement of user-defined standards in Terraform."
  },
  {
    "name": "terraform-docs",
    "url": "https://github.com/segmentio/terraform-docs",
    "description": "Quick utility to generate docs from terraform modules."
  },
  {
    "name": "terraform.py",
    "url": "https://github.com/ciscocloud/terraform.py",
    "description": "Ansible dynamic inventory script for parsing Terraform state files."
  },
  {
    "name": "terraform-provisioner",
    "url": "https://github.com/shuaibiyy/terraform-provisioner",
    "description": "Tool for managing multiple provisions of the same Terraform scripts."
  },
  {
    "name": "terraboot",
    "url": "https://github.com/MastodonC/terraboot",
    "description": "DSL to generate a terraform configuration and run it."
  },
  {
    "name": "terraform-provider-pingdom",
    "url": "https://github.com/russellcardullo/terraform-provider-pingdom",
    "description": "Terraform provider to manage pingdom resources."
  },
  {
    "name": "terragrunt",
    "url": "https://github.com/gruntwork-io/terragrunt",
    "description": "Terragrunt is a thin wrapper for Terraform that supports locking for Terraform state and enforces best practices."
  },
  {
    "name": "tfenv",
    "url": "https://github.com/kamatama41/tfenv",
    "description": "Terraform version manager inspired by rbenv."
  },
  {
    "name": "terraform-landscape",
    "url": "https://github.com/coinbase/terraform-landscape",
    "description": "Improve Terraform's plan output to be easier to read and understand."
  },
  {
    "name": "Blast Radius",
    "url": "https://github.com/28mm/blast-radius",
    "description": "Interactive visualizations of Terraform dependency graphs."
  },
  {
    "name": "Orchestrating Containers with Terraform and Consul",
    "url": "https://www.infoq.com/presentations/terraform-consul",
    "description": "Mitchell Hashimoto shows how Terraform can be used to deploy and scale containerized workloads."
  },
  {
    "name": "Building Scalable, Repeatable Infrastructure in the Cloud with Terraform",
    "url": "https://www.youtube.com/watch?v=cG7pcksTAnY",
    "description": "Demonstrates how Terraform enables the practice of Infrastructure as Code by deploying TeamCity in AWS using a hosted PostgreSQL."
  },
  {
    "name": "Evolving Your Infrastructure with Terraform",
    "url": "https://www.youtube.com/watch?v=wgzgVm7Sqlk",
    "description": "CTO of OpenCredo provides an extensive look at using Terraform in the real-world with the help of some interesting use-cases."
  },
  {
    "name": "Going Multi-Cloud with Terraform and Nomad",
    "url": "https://www.youtube.com/watch?v=e42A4aBZUkQ"
  },
  {
    "name": "Running a Terraform Environment at Scale",
    "url": "https://www.youtube.com/watch?v=3JVGSq7QIS0",
    "description": "Running Terraform at scale with hundreds of AWS accounts."
  },
  {
    "name": "Terraforming the Composable World",
    "url": "https://www.youtube.com/watch?v=cHrOXPatFeg",
    "description": "Integrating Terraform with an on-premise bare metal provisioning."
  },
  {
    "name": "State of Terraform Providerland",
    "url": "https://www.youtube.com/watch?v=ar1PF5iDtbg",
    "description": "How Terraform providers work and how to write one."
  },
  {
    "name": "Untangling Terraform Through Refactoring",
    "url": "https://www.youtube.com/watch?v=OH6iDKaXpZs",
    "description": "How to refactor your Terraform code in a careful way with minimum risk."
  },
  {
    "name": "Terraform At Scale",
    "url": "https://www.youtube.com/watch?v=RldRDryLiXs",
    "description": "How Segment uses Terraform."
  },
  {
    "name": "Production ChaosMonkey with Terraform",
    "url": "https://www.youtube.com/watch?v=CPI6W3LK0-g",
    "description": "How DigitalOcean uses Terraform to run production integration tests."
  },
  {
    "name": "Terraform w/ Lee Trout",
    "url": "https://www.youtube.com/watch?v=p2ESyuqPw1A",
    "description": "Focuses on development patterns and how to effectively structure Terraform code."
  },
  {
    "name": "Webinar: Multi-Cloud, One Command with Terraform",
    "url": "https://www.youtube.com/watch?v=adzqsywrJKk",
    "description": "Provisioning hybrid cloud infrastructure using Terraform."
  },
  {
    "name": "Vim-Terraform",
    "url": "https://github.com/hashivim/vim-terraform"
  },
  {
    "name": "Vim-Terraform-Completion",
    "url": "https://github.com/juliosueiras/vim-terraform-completion"
  },
  {
    "name": "Intellij",
    "url": "https://plugins.jetbrains.com/plugin/7808-hashicorp-terraform--hcl-language-support"
  },
  {
    "name": "Emacs terraform-mode",
    "url": "https://github.com/syohex/emacs-terraform-mode"
  }
]
