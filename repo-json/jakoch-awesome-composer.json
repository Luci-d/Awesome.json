[
  {
    "name": "Official Website",
    "url": "https://getcomposer.org/"
  },
  {
    "name": "Issues",
    "url": "https://github.com/composer/composer/issues"
  },
  {
    "name": "Github",
    "url": "https://github.com/composer/composer"
  },
  {
    "name": "Getting Started Guide and Installation Instructions",
    "url": "https://getcomposer.org/doc/00-intro.md"
  },
  {
    "name": "Documentation",
    "url": "https://getcomposer.org/doc/"
  },
  {
    "name": "API Documentation",
    "url": "https://getcomposer.org/apidoc/master/index.html"
  },
  {
    "name": "Find Packages on Packagist",
    "url": "https://packagist.org/"
  },
  {
    "name": "CheatSheet",
    "url": "http://composer.json.jolicode.com/",
    "description": "Overview of CLI commands and composer.json schema."
  },
  {
    "name": "Composer Installers",
    "url": "https://github.com/composer/installers",
    "description": "Composer installers for multiple frameworks."
  },
  {
    "name": "Ask a new question",
    "url": "http://stackoverflow.com/questions/ask?tags=composer-php+php"
  },
  {
    "name": "Find questions tagged composer-php",
    "url": "http://stackoverflow.com/questions/tagged/composer-php"
  },
  {
    "name": "Documentation for Plugins",
    "url": "https://getcomposer.org/doc/articles/plugins.md",
    "description": "This offical documentation is good starting point, when writing a Composer plugin."
  },
  {
    "name": "Composer-Asset-Plugin",
    "url": "https://github.com/fxpio/composer-asset-plugin",
    "description": "A npm/Bower Dependencies Manager for Composer."
  },
  {
    "name": "Composer-AWS",
    "url": "https://github.com/naderman/composer-aws",
    "description": "The plugin loads repository data and downloads packages from Amazon S3 (with authentication support for private repositories)."
  },
  {
    "name": "Composer-Composition",
    "url": "https://github.com/bamarni/composition",
    "description": "Provides an API, for checking your environment at runtime."
  },
  {
    "name": "Composer-Suggest",
    "url": "https://github.com/nfreear/composer-suggest",
    "description": "Enables you to install a custom group of suggested packages, based on keyword patterns."
  },
  {
    "name": "Composer-Versions-Check",
    "url": "https://github.com/Soullivaneuh/composer-versions-check",
    "description": "Shows outdated packages from last major versions after using the update command (showing \"Latest is vX.Y.Z\")."
  },
  {
    "name": "Composer-Changelogs",
    "url": "https://github.com/pyrech/composer-changelogs",
    "description": "Provides a summary of the updates with links to changelog/releasenote/tag. The output is ready to be pasted into the commit message when updating the composer.lock file."
  },
  {
    "name": "Composer-Merge-Plugin",
    "url": "https://github.com/wikimedia/composer-merge-plugin",
    "description": "Merges multiple composer.json files at Composer runtime."
  },
  {
    "name": "Composer-Bin-Plugin",
    "url": "https://github.com/bamarni/composer-bin-plugin",
    "description": "Adds support for managing dependencies for multiple packages in a single repository or isolate bin dependencies."
  },
  {
    "name": "Composer-Inheritance-Plugin",
    "url": "https://github.com/theofidry/composer-inheritance-plugin",
    "description": "Opinionated version of Wikimedia composer-merge-plugin to work in pair with Bamarni composer-bin-plugin."
  },
  {
    "name": "Composer-MonoRepo-Plugin",
    "url": "https://github.com/beberlei/composer-monorepo-plugin",
    "description": "The plugin adds support for managing dependencies for multiple packages in a single repository."
  },
  {
    "name": "Composer-Patches-Plugin",
    "url": "https://github.com/netresearch/composer-patches-plugin",
    "description": "Enables you to provide patches for any package from any package. When the dependency is fetched, the patch is applied on top."
  },
  {
    "name": "Composer-Patches",
    "url": "https://github.com/cweagans/composer-patches",
    "description": "The plugin applies a patch from a local or remote file to any required package."
  },
  {
    "name": "Composer-Plugin-QA",
    "url": "https://github.com/Webysther/composer-plugin-qa",
    "description": "Comprehensive Plugin for composer to execute PHP Quality assurance Tools."
  },
  {
    "name": "Composer-Cleanup-Plugin",
    "url": "https://github.com/barryvdh/composer-cleanup-plugin",
    "description": "Removes tests & documentation folders from the vendor dir."
  },
  {
    "name": "Composer-Cleaner",
    "url": "https://github.com/dg/composer-cleaner",
    "description": "The tool removes unnecessary files and directories from the vendor directory."
  },
  {
    "name": "Composer-Shared-Package-Plugin",
    "url": "https://github.com/Letudiant/composer-shared-package-plugin",
    "description": "Allows you to share your selected packages between your projects by creating symlinks."
  },
  {
    "name": "Composer-Symlinker",
    "url": "https://github.com/dg/composer-symlinker",
    "description": "Enables you to load some packages from different directories (instead of loading them from /vendor)."
  },
  {
    "name": "Prestissimo",
    "url": "https://github.com/hirak/prestissimo",
    "description": "A parallel downloader using phpext_curl."
  },
  {
    "name": "Composer-FastFetch",
    "url": "https://github.com/jakoch/composer-fastfetch",
    "description": "Parallel Downloader using external download tools: Aria2."
  },
  {
    "name": "Composer-Curl-Plugin",
    "url": "https://github.com/ngyuki/composer-curl-plugin",
    "description": "The plugin use phpext_curl for downloading packages."
  },
  {
    "name": "Composer-Custom-Directory-Installer",
    "url": "https://github.com/mnsami/composer-custom-directory-installer",
    "description": "A composer plugin, to install different types of composer packages in custom directories outside the default composer installation path (which is in the vendor folder)."
  },
  {
    "name": "Composer-Dependency-Analyzer",
    "url": "https://packagist.org/packages/jms/composer-deps-analyzer",
    "description": "Allows you to build a dependency graph for an installed composer project."
  },
  {
    "name": "PackageVersions",
    "url": "https://github.com/Ocramius/PackageVersions",
    "description": "Provides a very quick and easy access to installed composer dependency versions."
  },
  {
    "name": "Composer Locator",
    "url": "https://github.com/mindplay-dk/composer-locator",
    "description": "Provides a means of locating the installation path for a given Composer package name."
  },
  {
    "name": "PackageInfo",
    "url": "https://github.com/ThaDafinser/PackageInfo",
    "description": "Check if a package is installed and retrieve all package informations like version, tag release date, description, ..."
  },
  {
    "name": "Composer-Ignore-Plugin",
    "url": "https://github.com/lichunqiang/composer-ignore-plugin",
    "description": "The composer plugin to remove useless files in vendor by yourself."
  },
  {
    "name": "Composer-Git-Hooks",
    "url": "https://github.com/BrainMaestro/composer-git-hooks",
    "description": "A library for easily managing git hooks in your composer config."
  },
  {
    "name": "Symfony-Flex",
    "url": "https://github.com/symfony/flex",
    "description": "Provides recipe-based installation and configuration management for Symfony packages."
  },
  {
    "name": "PHPCodeSniffer-Composer-Installer",
    "url": "https://github.com/DealerDirect/phpcodesniffer-composer-installer",
    "description": "Automates the configuration of custom PHP_CodeSniffer standards/sniffs via Composer"
  },
  {
    "name": "Composer-Warmup",
    "url": "https://github.com/jderusse/composer-warmup",
    "description": "The plugin adds the command warmup-opcode to Composer, which triggers the compilation of all PHP files discovered in your project into the Opcache."
  },
  {
    "name": "Foxy",
    "url": "https://github.com/fxpio/foxy",
    "description": "Composer plugin that executes npm/yarn packages installation operations when composer package is installed or updated."
  },
  {
    "name": "NodeJS-Installer",
    "url": "https://github.com/thecodingmachine/nodejs-installer",
    "description": "downloads and installs NodeJS and npm as composer package"
  },
  {
    "name": "Composer SemVer Checker",
    "url": "https://semver.mwl.be",
    "description": "Enables you identify constraint to version resolution issues, by doing a semantic version check for Packagist hosted packages."
  },
  {
    "name": "Composer-Yaml",
    "url": "https://github.com/igorw/composer-yaml",
    "description": "This tool converts composer.yml to composer.json."
  },
  {
    "name": "Studio",
    "url": "https://github.com/franzliedke/studio",
    "description": "A workbench for developing Composer packages. Its an alternative to editing dependencies in the vendor folder or using PathRepositories to load a local clone of your dependency into your project."
  },
  {
    "name": "OctoLinker Browser Extension",
    "url": "https://github.com/OctoLinker/OctoLinker",
    "description": "Enables you to navigate Composer/NPM dependencies on Github."
  },
  {
    "name": "ComposerRequireChecker",
    "url": "https://github.com/maglnet/ComposerRequireChecker",
    "description": "A CLI tool to analyze dependencies and verify that no unknown imported symbols are used in the sources of a package."
  },
  {
    "name": "Composer-Travis-Lint",
    "url": "https://github.com/raphaelstolt/composer-travis-lint",
    "description": "Allows you to lint the Travis CI configuration file (.travis.yml)."
  },
  {
    "name": "Composer-Multitest",
    "url": "https://github.com/raphaelstolt/composer-multitest",
    "description": "Enables you to run a Composer script against multiple, locally installed PHP versions, which are managed by PHPBrew or phpenv."
  },
  {
    "name": "ScriptsDev",
    "url": "https://github.com/neronmoon/scriptsdev",
    "description": "Enables you to use a scripts-dev section, which triggers scripts only in dev mode."
  },
  {
    "name": "ParameterHandler",
    "url": "https://github.com/Incenteev/ParameterHandler",
    "description": "Allows you to manage your ignored parameters when running a composer install or update."
  },
  {
    "name": "PhantomJS-Installer- A Composer Package which installs the PhantomJS binary (Linux, Windows, Mac) into /bin of your project.",
    "url": "https://github.com/jakoch/phantomjs-installer"
  },
  {
    "name": "Tooly",
    "url": "https://github.com/tommy-muehle/tooly-composer-script",
    "description": "Manage needed PHAR files in your project composer.json. Every PHAR file will be saved in the composer binary directory. Optional with GPG verification for every PHAR."
  },
  {
    "name": "WordPress Packagist",
    "url": "https://wpackagist.org/",
    "description": "Mirrors the WordPress plugin and theme directories as a Composer repository."
  },
  {
    "name": "Asset Packagist",
    "url": "https://asset-packagist.org/",
    "description": "Enables installation of Bower and NPM packages as native Composer packages."
  },
  {
    "name": "Firegento",
    "url": "http://packages.firegento.com/",
    "description": "A Composer Repository providing Magento Modules."
  },
  {
    "name": "Drupal Packagist",
    "url": "https://www.drupal.org/node/2822344",
    "description": "Composer repositories for Drupal 7 and 8 core, modules, and themes."
  },
  {
    "name": "Satis Server",
    "url": "https://github.com/lukaszlach/satis-server",
    "description": "This docker container provides a Satis Server and enables you to run a private, self-hosted Composer repository with support for Git, Mercurial, and Subversion, HTTP API, HTTPs support, webhook handler and scheduled builds."
  },
  {
    "name": "Composercat",
    "url": "https://www.getcomposercat.com/",
    "description": "Composercat is a comprehensive GUI for the Composer package manager, designed both for professionals and people taking their first steps with Composer."
  },
  {
    "name": "A beginners guide to Composer",
    "url": "https://scotch.io/tutorials/a-beginners-guide-to-composer"
  },
  {
    "name": "A short & simple Composer tutorial",
    "url": "https://www.dev-metal.com/composer-tutorial/"
  },
  {
    "name": "Easy package management with Composer",
    "url": "https://code.tutsplus.com/tutorials/easy-package-management-with-composer--net-25530"
  },
  {
    "name": "PHP Dependency Management with Composer",
    "url": "https://www.sitepoint.com/re-introducing-composer/"
  },
  {
    "name": "Composer Primer",
    "url": "https://daylerees.com/composer-primer/"
  },
  {
    "name": "PHP Composer Magento Tutorial by Alan Storm",
    "url": "https://alanstorm.com/php_composer_magento_tutorial/"
  },
  {
    "name": "Creating and Using Composer Packages",
    "url": "https://hub.packtpub.com/creating-and-using-composer-packages/"
  },
  {
    "name": "Jordi Boggiano (seldaek)",
    "url": "https://seld.be/"
  },
  {
    "name": "Nils Adermann (naderman)",
    "url": "http://naderman.de/"
  },
  {
    "name": "Composer: Part 1",
    "url": "http://blog.nelm.io/2011/12/composer-part-1-what-why/",
    "description": "What & Why"
  },
  {
    "name": "Composer: Part 2",
    "url": "http://blog.nelm.io/2011/12/composer-part-2-impact/",
    "description": "Impact"
  },
  {
    "name": "Composer Stability Flags",
    "url": "https://igor.io/2013/02/07/composer-stability-flags.html"
  },
  {
    "name": "Composer Versioning",
    "url": "https://igor.io/2013/01/07/composer-versioning.html"
  },
  {
    "name": "Managing dependencies is more than running \"composer update\"",
    "url": "https://www.youtube.com/watch?v=QL6w8H2eHQE",
    "description": " Nils Adermann @ phpsrb17"
  },
  {
    "name": "Composer Best Practices — Jordi Boggiano @ php[tek] 2015",
    "url": "https://www.youtube.com/watch?v=uNlYpSTiAcA"
  },
  {
    "name": "Wonderful World of Composer",
    "url": "https://knpuniversity.com/screencast/composer"
  },
  {
    "name": "PHP Composer Quickstart",
    "url": "https://www.youtube.com/watch?v=Ejr4Xqs9V2I"
  },
  {
    "name": "How Composer helped shape the new way of writing PHP",
    "url": "https://www.youtube.com/watch?v=C2jfLM-Egvg",
    "description": "Nils Adermann @ Drupal Camp Frankfurt"
  },
  {
    "name": "Composer Package Management",
    "url": "https://www.youtube.com/watch?v=P4Qnp90TG0g",
    "description": "Nils Adermann @ T3CON12DE"
  },
  {
    "name": "PHP Reinvented",
    "url": "http://www.naderman.de/slippy/src/?file=2014-04-13-PHP-Reinvented.html",
    "description": "How Composer helped shape the new way of writing PHP"
  },
  {
    "name": "Composer Update",
    "url": "http://www.naderman.de/slippy/src/?file=2015-02-03-Composer-Update.html"
  },
  {
    "name": "Dependency Management with Composer PHP Reinvented",
    "url": "http://www.naderman.de/slippy/src/?file=2015-02-01-Dependency-Management-with-Composer-PHP-Reinvented.html"
  },
  {
    "name": "Managing dependencies is\nmore than running\n\"composer update\"",
    "url": "http://naderman.de/slippy/slides/2017-06-30-DPC-Dependency-Management-is-more-than-composer-update.pdf"
  },
  {
    "name": "Composer\nBest Practices",
    "url": "http://www.naderman.de/slippy/slides/2017-07-13-T3DD17-Composer-Best-Practices.pdf"
  },
  {
    "name": "Gain Control over your\nDependencies with\nPrivate Packagist",
    "url": "http://www.naderman.de/slippy/slides/2017-07-14-T3DD17-Gain-control-over-your-dependencies-with-private-packagist.pdf"
  },
  {
    "name": "Dependency Management with Composer",
    "url": "http://slides.seld.be/?file=2013-10-04+Dependency+Management+with+Composer.html"
  },
  {
    "name": "In Depth with Composer",
    "url": "http://slides.seld.be/?file=2013-10-05+In-Depth+with+Composer.html"
  },
  {
    "name": "Composer Best Practices",
    "url": "http://slides.seld.be/?file=2015-07-25+Composer+Best+Practices.html"
  },
  {
    "name": "Introduction to Composer",
    "url": "http://slides.seld.be/?file=2015-06-30+Introduction+to+Composer.html"
  },
  {
    "name": "Packagist Mirror from Brazil",
    "url": "https://github.com/Webysther/packagist-mirror",
    "description": "This is a maintained stable version of packagist crawler."
  },
  {
    "name": "Docker Image",
    "url": "https://github.com/Webysther/packagist-mirror-docker",
    "description": "This Docker image helps to create a customized packagist mirror."
  },
  {
    "name": "Packagist Mirror from Indonesia",
    "url": "https://github.com/IndraGunawan/packagist-mirror",
    "description": "Another implementation for creating a packagist mirror."
  },
  {
    "name": "Canada",
    "url": "https://packagist.org",
    "description": "packagist.org Main mirror"
  },
  {
    "name": "Brazil",
    "url": "https://packagist.com.br",
    "description": "packagist.com.br"
  },
  {
    "name": "China",
    "url": "https://pkg.phpcomposer.com",
    "description": "packagist.phpcomposer.com"
  },
  {
    "name": "Indonesia",
    "url": "https://packagist.phpindonesia.id",
    "description": "packagist.phpindonesia.id"
  },
  {
    "name": "Japan",
    "url": "https://packagist.jp",
    "description": "packagist.jp"
  },
  {
    "name": "Private Packagist Cloud",
    "url": "https://packagist.com",
    "description": "A Composer Repository as a Service for private packages and to mirror packages from other repositories"
  },
  {
    "name": "Private Packagist Enterprise",
    "url": "https://packagist.com",
    "description": "On-premise self-hosted version of Private Packagist"
  },
  {
    "name": "Gitlab-Composer",
    "url": "https://github.com/wemakecustom/gitlab-composer",
    "description": "This is a branch/tag indexer for Gitlab repositories."
  },
  {
    "name": "Satisfy",
    "url": "https://github.com/ludofleury/satisfy",
    "description": "Satis composer repository manager with a Web UI."
  },
  {
    "name": "Satis Control Panel",
    "url": "https://github.com/realshadow/satis-control-panel",
    "description": "A simple web UI for managing your Satis Repository with optional CI integration."
  },
  {
    "name": "Satis Go",
    "url": "https://github.com/benschw/satis-go",
    "description": "A web server for managing Satis configuration and hosting the generated Composer repository."
  },
  {
    "name": "ToranProxy (deprecated)",
    "url": "https://toranproxy.com/",
    "description": "In addition to providing a composer repository ToranProxy acts as a proxy server for Packagist and GitHub."
  }
]
